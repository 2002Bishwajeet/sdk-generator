{% macro sub_schema(property) %}{% if property.sub_schema %}{% if property.type == 'array' %}List<{{property.sub_schema | caseUcfirst}}>{% else %}{{property.sub_schema | caseUcfirst}}{% endif %}{% else %}{{property.type | typeName}}{% endif %}{% endmacro %}
part of {{ language.params.packageName }};

class {{ definition.name | caseUcfirst }} {
{% for property in definition.properties %}
{% if not property.required %} {{_self.sub_schema(property)}}? {{ property.name | escapeKeyword }} {% else %} {{_self.sub_schema(property)}} {{ property.name | escapeKeyword }}{% endif %};
{% endfor %}

    {{ definition.name | caseUcfirst}}({ {% for property in definition.properties %}{% if property.required %}required {% endif %}this.{{ property.name | escapeKeyword }},{% endfor %} });

    factory {{ definition.name | caseUcfirst}}.fromMap(Map<String,dynamic> map) {
        return {{ definition.name | caseUcfirst }}(
{% for property in definition.properties %}
        {{ property.name | escapeKeyword }}: map['{{property.name | escapeDollarSign }}'],
{% endfor %}
        );
    }

    Map<String, dynamic> toMap() {
        return {
{% for property in definition.properties %}
        "{{ property.name | escapeDollarSign }}":{{property.name | escapeKeyword }},
{% endfor %}
        };
    }

}

